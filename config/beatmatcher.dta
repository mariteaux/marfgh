; This file defines which buttons go to each smasher. joypad is DualShock,
; joypad_guitar is guitar, lefty_joypad_guitar is guitar in Lefty Flip.
(controller ; originally from config/beatmatch_controller.dta
   (joypad
      (slots
         {if_else {== {gamecfg get mode} jukebox} KB_UP kPad_L2} 0
         {if_else {== {gamecfg get mode} jukebox} KB_LEFT kPad_L1} 1
         {if_else {== {gamecfg get mode} jukebox} KB_DOWN kPad_R1} 2
         {if_else {== {gamecfg get mode} jukebox} KB_RIGHT kPad_R2} 3
         {if_else {== {gamecfg get mode} jukebox} KB_PAGE_DOWN kPad_X} 4)
      (force_mercury kPad_Select)
      (dpad_for_navigation FALSE))
   (joypad_guitar
      ;(slots kPad_DLeft 0 kPad_DUp 1 kPad_Tri 2 kPad_Circle 3 kPad_X 4)
      (slots
         {if_else {== {gamecfg get mode} jukebox} KB_UP kPad_L2} 0
         {if_else {== {gamecfg get mode} jukebox} KB_LEFT kPad_L1} 1
         {if_else {== {gamecfg get mode} jukebox} KB_DOWN kPad_R1} 2
         {if_else {== {gamecfg get mode} jukebox} KB_RIGHT kPad_R2} 3
         {if_else {== {gamecfg get mode} jukebox} KB_PAGE_DOWN kPad_X} 4)
      (force_mercury kPad_Select)
      (dpad_for_navigation FALSE))
   (lefty_joypad_guitar
      (slots
         {if_else {== {gamecfg get mode} jukebox} KB_UP kPad_X} 0
         {if_else {== {gamecfg get mode} jukebox} KB_LEFT kPad_R2} 1
         {if_else {== {gamecfg get mode} jukebox} KB_DOWN kPad_R1} 2
         {if_else {== {gamecfg get mode} jukebox} KB_RIGHT kPad_L1} 3
         {if_else {== {gamecfg get mode} jukebox} KB_PAGE_DOWN kPad_L2} 4)
      (force_mercury kPad_Select)
      (dpad_for_navigation FALSE))
   (guitar
      (slots
         {if_else {== {gamecfg get mode} jukebox} KB_UP kPad_R2} 0
         {if_else {== {gamecfg get mode} jukebox} KB_LEFT kPad_Circle} 1
         {if_else {== {gamecfg get mode} jukebox} KB_DOWN kPad_Tri} 2
         {if_else {== {gamecfg get mode} jukebox} KB_RIGHT kPad_X} 3
         {if_else {== {gamecfg get mode} jukebox} KB_PAGE_DOWN kPad_Square} 4)
      (force_mercury kPad_Select))
   (guitar_xbox
      (slots
         {if_else {== {gamecfg get mode} jukebox} KB_UP kPad_X} 0
         {if_else {== {gamecfg get mode} jukebox} KB_LEFT kPad_Tri} 1
         {if_else {== {gamecfg get mode} jukebox} KB_DOWN kPad_Square} 2
         {if_else {== {gamecfg get mode} jukebox} KB_RIGHT kPad_Circle} 3
         {if_else {== {gamecfg get mode} jukebox} KB_PAGE_DOWN kPad_L1} 4)
      (force_mercury kPad_Select)
      (mercury_switch kPad_RStickUp)))
(midi_parsers #include midi_parsers.dta)
(watcher
   (slop 100) ; In ms, how much you can be off by and still hit the note
   (cheat_error 0)
   (pitch_bend_range 1)
   (ms_to_full_pitch_bend 1000))

; originally from ../../../system/run/config/beatmatch.dta
(parser
   (hopo_threshold 170) ; Where the default hopo_threshold is set!
   (track_mapping
      (GUITAR guitar)
      (RHYTHM rhythm)
      (BASS bass)
      (KEYS keys)
      (DRUM drum)
      (VOCALS vocals)
      (SINGER vocals)
      (RAP rap)
      (DJ dj)))
; end manual merge

(ingame_stats
   (missed_slop_threshold 200))
(audio
   (multiplayer_scale 0.33)
   (multiplayer_attenuation 1.5)
   (multiplayer_common_attenuation 1.5)
   (background_attenuation 5.0)
   (practice_attenuation 7.5)
   (submixes))

; originally from ../../../system/run/config/beatmatch.dta
(mercury_switch_filter
   (any_sign_filter
      (window 0.5)
      (num_frames 3)))
; end manual merge